// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https",
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API key-based authenticator for Traefik.",
    "title": "traefik-api-key-forward-auth",
    "version": "1.0.0"
  },
  "basePath": "/api",
  "paths": {
    "/key": {
      "get": {
        "security": [
          {
            "management_auth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "key"
        ],
        "summary": "Get filtered key list",
        "operationId": "getKeys",
        "parameters": [
          {
            "type": "string",
            "description": "JSON object with filter values",
            "name": "filter",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "description": "Default limit value is 50",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Cursor, last item ID",
            "name": "after",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GetKeysResult"
            }
          },
          "400": {
            "description": "Invalid request supplied"
          }
        }
      },
      "post": {
        "security": [
          {
            "management_auth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "key"
        ],
        "summary": "Add a new API key",
        "operationId": "addKey",
        "parameters": [
          {
            "description": "Pet object that needs to be added to the store",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateKeyBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CreateKeyResult"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthenticated"
          }
        }
      }
    },
    "/key/{id}": {
      "delete": {
        "security": [
          {
            "management_auth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "key"
        ],
        "summary": "Get filtered key list",
        "operationId": "deleteKey",
        "parameters": [
          {
            "type": "string",
            "description": "Key id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid request supplied"
          }
        }
      }
    }
  },
  "definitions": {
    "CreateKeyBody": {
      "type": "object",
      "properties": {
        "attributes": {
          "description": "Custom attributes (optional)",
          "type": "object"
        },
        "organizationId": {
          "description": "Organization ID (optional)",
          "type": "string"
        },
        "projectId": {
          "description": "Project ID (optional)",
          "type": "string"
        },
        "userId": {
          "description": "User ID (optional)",
          "type": "string"
        }
      }
    },
    "CreateKeyResult": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Database record id",
          "type": "string"
        },
        "key": {
          "description": "Unmasked API key",
          "type": "string"
        }
      }
    },
    "GetKeysResult": {
      "type": "object",
      "properties": {
        "attributes": {
          "description": "Custom attributes (optional)",
          "type": "object"
        },
        "id": {
          "description": "Database record id",
          "type": "string"
        },
        "key": {
          "description": "Masked API key (asterisks in the middle)",
          "type": "string"
        },
        "organizationId": {
          "description": "Organization ID (optional)",
          "type": "string"
        },
        "projectId": {
          "description": "Project ID (optional)",
          "type": "string"
        },
        "userId": {
          "description": "User ID (optional)",
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "management_auth": {
      "type": "apiKey",
      "name": "X-Api-Key",
      "in": "header"
    }
  },
  "tags": [
    {
      "description": "Manage API keys",
      "name": "key"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https",
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API key-based authenticator for Traefik.",
    "title": "traefik-api-key-forward-auth",
    "version": "1.0.0"
  },
  "basePath": "/api",
  "paths": {
    "/key": {
      "get": {
        "security": [
          {
            "management_auth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "key"
        ],
        "summary": "Get filtered key list",
        "operationId": "getKeys",
        "parameters": [
          {
            "type": "string",
            "description": "JSON object with filter values",
            "name": "filter",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "description": "Default limit value is 50",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Cursor, last item ID",
            "name": "after",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GetKeysResult"
            }
          },
          "400": {
            "description": "Invalid request supplied"
          }
        }
      },
      "post": {
        "security": [
          {
            "management_auth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "key"
        ],
        "summary": "Add a new API key",
        "operationId": "addKey",
        "parameters": [
          {
            "description": "Pet object that needs to be added to the store",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateKeyBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CreateKeyResult"
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthenticated"
          }
        }
      }
    },
    "/key/{id}": {
      "delete": {
        "security": [
          {
            "management_auth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "key"
        ],
        "summary": "Get filtered key list",
        "operationId": "deleteKey",
        "parameters": [
          {
            "type": "string",
            "description": "Key id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid request supplied"
          }
        }
      }
    }
  },
  "definitions": {
    "CreateKeyBody": {
      "type": "object",
      "properties": {
        "attributes": {
          "description": "Custom attributes (optional)",
          "type": "object"
        },
        "organizationId": {
          "description": "Organization ID (optional)",
          "type": "string"
        },
        "projectId": {
          "description": "Project ID (optional)",
          "type": "string"
        },
        "userId": {
          "description": "User ID (optional)",
          "type": "string"
        }
      }
    },
    "CreateKeyResult": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Database record id",
          "type": "string"
        },
        "key": {
          "description": "Unmasked API key",
          "type": "string"
        }
      }
    },
    "GetKeysResult": {
      "type": "object",
      "properties": {
        "attributes": {
          "description": "Custom attributes (optional)",
          "type": "object"
        },
        "id": {
          "description": "Database record id",
          "type": "string"
        },
        "key": {
          "description": "Masked API key (asterisks in the middle)",
          "type": "string"
        },
        "organizationId": {
          "description": "Organization ID (optional)",
          "type": "string"
        },
        "projectId": {
          "description": "Project ID (optional)",
          "type": "string"
        },
        "userId": {
          "description": "User ID (optional)",
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "management_auth": {
      "type": "apiKey",
      "name": "X-Api-Key",
      "in": "header"
    }
  },
  "tags": [
    {
      "description": "Manage API keys",
      "name": "key"
    }
  ]
}`))
}
